var PayloadDecompressor;(function(n){function e(n){return{ID:n[t.ID],Alive:!!n[t.Alive],Collided:!!n[t.Collided],CollidedAt:new THREE.Vector3(n[t.CollidedAt_X],n[t.CollidedAt_Y],n[t.CollidedAt_Z]),Position:new THREE.Vector3(n[t.Position_X],n[t.Position_Y],n[t.Position_Z]),Velocity:new THREE.Vector3(n[t.Velocity_X],n[t.Velocity_Y],n[t.Velocity_Z]),Rotation:n[t.Rotation]}}function o(n){var t=e(n);return t.TrailColor=n[u.TrailColor],t}function s(n){t=n.CollidableCompressionContract,u=n.CycleCompressionContract,f=n.InitializationPayloadCompressionContract,i=n.MovementPayloadCompressionContract,r=n.DeathPayloadCompressionContract}function h(n){var t={};return t.ID=n[r.ID],t.DiedAt=new THREE.Vector3(n[r.DiedAt_X],n[r.DiedAt_Y],n[r.DiedAt_Z]),t}function c(n){var t={};return t.ID=n[i.ID],t.Direction=n[i.Direction],t.Position=new THREE.Vector3(n[i.Position_X],n[i.Position_Y],n[i.Position_Z]),t}function l(n){var t={},r=[],i;for(t.Cycles=n[f.Cycles],i=t.Cycles.length-1;i>=0;i--)r.push(o(t.Cycles[i]));return t.Cycles=r,t}var t,u,f,i,r;n.LoadContracts=s,n.DecompressDeathPayload=h,n.DecompressMovementPayload=c,n.DecompressInitializationPayload=l})(PayloadDecompressor||(PayloadDecompressor={}))