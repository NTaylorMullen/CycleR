var PayloadDecompressor;(function(n){function o(n){return{ID:n[t.ID],Alive:!!n[t.Alive],Position:new THREE.Vector3(n[t.Position_X],n[t.Position_Y],n[t.Position_Z]),Velocity:new THREE.Vector3(n[t.Velocity_X],n[t.Velocity_Y],n[t.Velocity_Z]),Rotation:n[t.Rotation]}}function s(n){var t=o(n);return t.TrailColor=n[f.TrailColor],t}function h(n){t=n.CollidableCompressionContract,f=n.CycleCompressionContract,e=n.InitializationCompressionContract,i=n.MovementCompressionContract,r=n.DeathCompressionContract,u=n.CollisionCompressionContract}function c(n){var t={};return t.ID=n[u.ID],t.CollidedAt=new THREE.Vector3(n[u.CollidedAt_X],n[u.CollidedAt_Y],n[u.CollidedAt_Z]),t}function l(n){var t={};return t.ID=n[r.ID],t.DiedAt=new THREE.Vector3(n[r.DiedAt_X],n[r.DiedAt_Y],n[r.DiedAt_Z]),t}function a(n){var t={};return t.ID=n[i.ID],t.Direction=n[i.Direction],t.Position=new THREE.Vector3(n[i.Position_X],n[i.Position_Y],n[i.Position_Z]),t}function v(n){var t={},r=[],i;for(t.Cycles=n[e.Cycles],i=t.Cycles.length-1;i>=0;i--)r.push(s(t.Cycles[i]));return t.Cycles=r,t}var t,f,e,i,r,u;n.LoadContracts=h,n.DecompressCollisionPayload=c,n.DecompressDeathPayload=l,n.DecompressMovementPayload=a,n.DecompressInitializationPayload=v})(PayloadDecompressor||(PayloadDecompressor={}))