var __extends=this.__extends||function(n,t){function i(){this.constructor=n}i.prototype=t.prototype,n.prototype=new i},AttachedCameraController=function(n){function t(t,i){var r=this;n.call(this,t,i),this._camera=t,this._theta=0,this._cameraInverted=!0,this._attachedTo=null,this._readMouse=!1,this._mouseStart=new THREE.Vector2,this._thetaIncrementor=0,document.addEventListener("mousemove",function(n){r.onMouseMove(n)},!1),document.addEventListener("mousedown",function(n){r.onMouseDown(n)},!1),document.addEventListener("mouseup",function(n){r.onMouseUp(n)},!1),this.applyKeyboardBindings()}return __extends(t,n),t.MODE="Attached",t.INTERPOLATE_THRESHOLD=30,t.CAMERA_SENSITIVITY=300,t.CAMERA_SPEED=4,t.CAMERA_HEIGHT=300,t.CAMERA_DISTANCE=500,t.TO_RADIANS=Math.PI/360,t.prototype.onMouseMove=function(n){if(n.preventDefault(),this._readMouse){var r=-1,i=this._mouseStart.x-n.clientX;i!==0&&(i/=Math.abs(i)),this._cameraInverted||(r*=-1),this._thetaIncrementor=i*r*Math.min(Math.abs((this._mouseStart.x-n.clientX)/t.CAMERA_SENSITIVITY),1)*t.CAMERA_SPEED}},t.prototype.onMouseDown=function(n){n.preventDefault(),this._mouseStart.x=n.clientX,this._mouseStart.y=n.clientY,this._readMouse=!0},t.prototype.onMouseUp=function(n){n.preventDefault(),this._readMouse=!1,this._thetaIncrementor=0},t.prototype.tweenThetaOffsetBy=function(n){this._readMouse||(this._theta=this._attachedTo.rotation.y/t.TO_RADIANS+n)},t.prototype.applyKeyboardBindings=function(){var n=this;shortcut.add("1",function(){n.tweenThetaOffsetBy(-90)}),shortcut.add("2",function(){n.tweenThetaOffsetBy(90)}),shortcut.add("3",function(){n.tweenThetaOffsetBy(-270)}),shortcut.add("4",function(){n.tweenThetaOffsetBy(270)})},t.prototype.getAttachedPosition=function(){var n=this._lastAttachedPosition.clone(),i=this._attachedTo.position.x-this._lastAttachedPosition.x,r=this._attachedTo.position.z-this._lastAttachedPosition.z;return Math.abs(i)>t.INTERPOLATE_THRESHOLD?n.x+=i/Math.abs(i)*t.INTERPOLATE_THRESHOLD:n.x=this._attachedTo.position.x,Math.abs(r)>t.INTERPOLATE_THRESHOLD?n.z+=r/Math.abs(r)*t.INTERPOLATE_THRESHOLD:n.z=this._attachedTo.position.z,n},t.prototype.AttachTo=function(n){if(this._attachedTo===null)this._attachedTo=n,this._lastAttachedPosition=n.position.clone(),this._camera.lookAt(n.position),this._camera.position.y=t.CAMERA_HEIGHT;else throw new Error("Camera is already attached to an object.");},t.prototype.Detach=function(){if(this._attachedTo!==null)this._attachedTo=null,this._lastAttachedPosition=null;else throw new Error("Camera is not attached to an objects.");},t.prototype.Update=function(i){if(n.prototype.Update.call(this,i),this._attachedTo!=null){this._readMouse&&(this._theta+=this._thetaIncrementor);var r=this.getAttachedPosition();this._camera.position.x=r.x+t.CAMERA_DISTANCE*Math.sin(this._theta*t.TO_RADIANS),this._camera.position.z=r.z+t.CAMERA_DISTANCE*Math.cos(this._theta*t.TO_RADIANS),this._camera.lookAt(this._attachedTo.position),this._lastAttachedPosition=r}},t}(CameraController)